// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OsApi.Data;

#nullable disable

namespace OsApi.Migrations
{
    [DbContext(typeof(OsDbContext))]
    [Migration("20251005230352_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("OsApi.Domain.ChecklistItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Obrigatorio")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Ativo");

                    b.ToTable("ChecklistItems");
                });

            modelBuilder.Entity("OsApi.Domain.OSChecklist", b =>
                {
                    b.Property<int>("OsId")
                        .HasColumnType("int");

                    b.Property<int>("ChecklistItemId")
                        .HasColumnType("int");

                    b.Property<bool?>("Marcado")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("ObrigatorioSnapshot")
                        .HasColumnType("tinyint(1)");

                    b.Property<double?>("ValorNumero")
                        .HasColumnType("double");

                    b.Property<string>("ValorTexto")
                        .HasColumnType("longtext");

                    b.HasKey("OsId", "ChecklistItemId");

                    b.HasIndex("ChecklistItemId");

                    b.ToTable("OSChecklists");
                });

            modelBuilder.Entity("OsApi.Domain.OSFoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OsId")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("OsId");

                    b.ToTable("OSFotos");
                });

            modelBuilder.Entity("OsApi.Domain.OrdemServico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TecnicoId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("TecnicoId");

                    b.ToTable("OS");
                });

            modelBuilder.Entity("OsApi.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OsApi.Domain.OSChecklist", b =>
                {
                    b.HasOne("OsApi.Domain.ChecklistItem", "Item")
                        .WithMany()
                        .HasForeignKey("ChecklistItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OsApi.Domain.OrdemServico", "OS")
                        .WithMany("Checks")
                        .HasForeignKey("OsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("OS");
                });

            modelBuilder.Entity("OsApi.Domain.OSFoto", b =>
                {
                    b.HasOne("OsApi.Domain.OrdemServico", "OS")
                        .WithMany("Fotos")
                        .HasForeignKey("OsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OS");
                });

            modelBuilder.Entity("OsApi.Domain.OrdemServico", b =>
                {
                    b.HasOne("OsApi.Domain.User", "Tecnico")
                        .WithMany()
                        .HasForeignKey("TecnicoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Tecnico");
                });

            modelBuilder.Entity("OsApi.Domain.OrdemServico", b =>
                {
                    b.Navigation("Checks");

                    b.Navigation("Fotos");
                });
#pragma warning restore 612, 618
        }
    }
}
