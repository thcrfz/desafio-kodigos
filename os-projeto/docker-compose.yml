services:
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    command: --default-authentication-plugin=mysql_native_password --sql-mode=""
    ports: ["3306:3306"]
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-u", "${MYSQL_USER}", "-p${MYSQL_PASSWORD}"]
      interval: 5s
      timeout: 3s
      retries: 20

  adminer:
    image: adminer
    ports: ["8080:8080"]
    depends_on: [mysql]

  api:
    # usa o Dockerfile da API normalmente (stage final de runtime)
    build: ./api
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:${API_PORT}
      ConnectionStrings__Default: "server=mysql;port=3306;database=${MYSQL_DATABASE};user=${MYSQL_USER};password=${MYSQL_PASSWORD};TreatTinyAsBoolean=true"
      Jwt__Key: ${JWT_KEY}
      Jwt__Issuer: osapi
      Jwt__Audience: osweb
    ports: ["${API_PORT}:${API_PORT}"]
    volumes:
      - ./uploads:/app/wwwroot/uploads
    depends_on:
      mysql:
        condition: service_healthy

  web:
    # usa o Dockerfile do web; sem bind de c√≥digo e sem node_modules volume
    build: ./web
    environment:
      VITE_API_BASE: "http://localhost:${API_PORT}"
    ports: ["${WEB_PORT}:5173"]
    depends_on: [api]

volumes:
  mysql_data:
